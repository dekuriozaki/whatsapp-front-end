import { useEffect, useState } from 'react';
import './App.css';
import Chat from './Chat';
import Sidebar from './Sidebar';
import Pusher from 'pusher-js';
import axios from './axios';
import LoginForm from './LoginForm';
import SignupForm from './SignupForm';

function App() {
  const [ messages, setMessages] = useState([]);

  const [haveAccount, setHaveAccount] = useState(true);
  const [isLoggedIn, setIsLoggedIn] = useState(false);

  const login = (mobile, password) => {
    if (mobile && password) {
      setIsLoggedIn(true);
    }
  };

  const handleLogout = () => {
    setIsLoggedIn(false);
  };

  const toggleForm = () => {
    setHaveAccount(!haveAccount);
  };

  const [ chats, setChats] = useState([]);
 
  useEffect(() =>{
    axios.get('/api/messages/sync')
      .then(response =>{
        setMessages(response.data);
      })
  },[]);

  useEffect(() =>{
    axios.get('/api/chats/sync')
      .then(response =>{
        setChats(response.data);
      })
  },[]); 

  useEffect(() =>{
    const pusher = new Pusher('1080998a0f9e901baba0', {
      cluster: 'ap2'
    });

    const channel = pusher.subscribe('chats');
    channel.bind('modified', (newChat) =>{
      setChats([...chats,newChat]);
    });

    return () =>{
      channel.unbind_all();
      channel.unsubscribe();
    }
  },[chats]);

  //see if you need to use pusher for chat sidebar to load in real time 

  useEffect(() =>{
    const pusher = new Pusher('1080998a0f9e901baba0', {
      cluster: 'ap2'
    });

    const channel = pusher.subscribe('messages');
    channel.bind('inserted', (newMessage) =>{
      setMessages([...messages,newMessage]);
    });


    return () =>{
      channel.unbind_all();
      channel.unsubscribe();
    }
  },[messages]);
  
  console.log(messages);

  return (
    <div className="app">
      
      { isLoggedIn ?(<div className='app__body'>
                      <Sidebar chats = {chats}/>
                      <Chat messages={messages}/>
                    </div>)
        : (<div>{ haveAccount ? <LoginForm toggleForm={toggleForm} login = {login} /> : <SignupForm toggleForm={toggleForm} />}
      </div>
      )}
        
    </div>
  );
}

export default App;
